{"version":3,"sources":["helpers/utils.js","providers/AppProvider.js","hooks/appHooks.js","components/PrivateRoute.js","components/Header.js","components/PublicRoute.js","components/Loader.js","pages/Users.js","pages/Login.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["postData","a","url","data","token","fetch","method","headers","Accept","Authorization","body","JSON","stringify","response","json","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","AppContext","React","createContext","users","setUsers","loginError","setLoginError","isLoggedIn","setIsLoggegIn","handleLogin","isLoading","setIsLoading","setToken","AppProvider","props","useState","useEffect","name","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","readCookie","loginData","process","accountId","pswd","password","console","error","Provider","value","children","useAppContext","useContext","useApp","PrivateRoute","Component","component","rest","render","to","useStyles","makeStyles","theme","root","backgroundColor","palette","common","white","color","padding","link","fontSize","toolbar","display","justifyContent","alignItems","button","fontWeight","Header","classes","AppBar","position","className","Toolbar","Link","href","src","alt","height","Button","onClick","PublicRoute","backdrop","zIndex","drawer","Loader","Backdrop","open","CircularProgress","Users","Copyright","Typography","variant","align","paper","marginTop","spacing","flexDirection","avatar","margin","secondary","main","form","width","submit","Login","remember","setLoginData","handleSubmit","e","preventDefault","error_message","message","Container","maxWidth","CssBaseline","Avatar","noValidate","onSubmit","TextField","required","fullWidth","id","label","type","autoFocus","onChange","target","autoComplete","FormControlLabel","control","Checkbox","checked","size","Box","mt","NotFound","App","path","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","ReactDOM","StrictMode","getElementById","URL","origin","addEventListener","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"qPAAeA,I,2EAAf,8CAAAC,EAAA,6DAAwBC,EAAxB,+BAA8B,GAAIC,EAAlC,+BAAyC,GAAIC,EAA7C,+BAAqD,GAArD,SACyBC,MAAMH,EAAK,CAChCI,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,mBACRC,cAAc,UAAD,OAAYL,IAE3BM,KAAMC,KAAKC,UAAUT,KARzB,cACQU,EADR,gBAUeA,EAASC,OAVxB,oF,sBA4BA,SAASC,EAAUC,EAAOC,EAAQC,GAChC,IAAIC,EAAI,IAAIC,KACZD,EAAEE,QAAQF,EAAEG,UAAqB,GAATJ,EAAc,GAAK,GAAK,KAChD,IAAIK,EAAU,WAAaJ,EAAEK,cAC7BC,SAASC,OAASV,EAAQ,IAAMC,EAAS,KAAOM,EC7B3C,IAAMI,EAAaC,IAAMC,cAAc,CAC5CC,MAAO,GACPC,SAAU,KACVC,WAAY,KACZC,cAAe,KACfC,YAAY,EACZC,cAAe,KACfC,YAAa,KACbC,WAAW,EACXC,aAAc,KACdlC,MAAO,KACPmC,SAAU,OAGCC,EAAc,SAAAC,GAAU,IAAD,EACEb,IAAMc,UAAS,GADjB,mBAC3BR,EAD2B,KACfC,EADe,OAERP,IAAMc,SAAS,IAFP,mBAE3BZ,EAF2B,KAEpBC,EAFoB,OAGEH,IAAMc,SAAS,MAHjB,mBAG3BV,EAH2B,KAGfC,EAHe,OAIAL,IAAMc,UAAS,GAJf,mBAI3BL,EAJ2B,KAIhBC,EAJgB,OAKRV,IAAMc,SAAS,MALP,mBAK3BtC,EAL2B,KAKpBmC,EALoB,KAOlCI,qBAAU,WACRL,GAAa,GACb,IAAMlC,EDbV,SAAoBwC,GAGlB,IAFA,IAAIC,EAASD,EAAO,IAChBE,EAAKrB,SAASC,OAAOqB,MAAM,KACtBC,EAAI,EAAGA,EAAIF,EAAGG,OAAQD,IAAK,CAElC,IADA,IAAIE,EAAIJ,EAAGE,GACY,MAAhBE,EAAEC,OAAO,IACdD,EAAIA,EAAEE,UAAU,EAAGF,EAAED,QAEvB,GAA0B,IAAtBC,EAAEG,QAAQR,GACZ,OAAOK,EAAEE,UAAUP,EAAOI,OAAQC,EAAED,QAGxC,OAAO,KCCSK,CAAW,SACrBlD,IACF+B,GAAc,GACdI,EAASnC,IAEXkC,GAAa,KACZ,IAEH,IAAMF,EAAW,uCAAG,WAAMmB,GAAN,eAAAtD,EAAA,+EAEOD,EAASwD,yDAAiC,CAC/DC,UAAWF,EAAUE,UACrBC,KAAMH,EAAUI,WAJF,cAEV9C,EAFU,yBAMTA,GANS,gCAQhB+C,QAAQC,MAAR,MACA5B,EAAc,EAAD,IATG,yDAAH,sDAajB,OACE,kBAACN,EAAWmC,SAAZ,CACEC,MAAO,CACL7B,aACAC,gBACAL,QACAC,WACAC,aACAC,gBACAG,cACAC,YACAC,eACAlC,QACAmC,aAGDE,EAAMuB,W,QC5DPC,EAAgB,kBAAMC,qBAAWvC,IAE1BwC,EAAS,WAapB,MAAO,CACL9B,UAbgB4B,IAAgB5B,UAchCC,aAbmB2B,IAAgB3B,aAcnCJ,WAbiB+B,IAAgB/B,WAcjCC,cAboB8B,IAAgB9B,cAcpCL,MAbYmC,IAAgBnC,MAc5BC,SAbekC,IAAgBlC,SAc/BC,WAbiBiC,IAAgBjC,WAcjCC,cAboBgC,IAAgBhC,cAcpCG,YAbkB6B,IAAgB7B,YAclChC,MAbY6D,IAAgB7D,MAc5BmC,SAbe0B,IAAgB1B,WCEpB6B,EAdM,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BAClDrC,EAAeiC,IAAfjC,WACR,OAGE,kBAAC,IAAD,iBACMqC,EADN,CAEEC,OAAQ,SAAA/B,GAAK,OACXP,EAAa,kBAACmC,EAAc5B,GAAY,kBAAC,IAAD,CAAUgC,GAAG,wB,6CCHvDC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,OAAOC,MACtCC,MAAO,UACPC,QAAS,UAEXC,KAAM,CACJC,SAAU,GAEZC,QAAS,CACPC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UAEdC,OAAQ,CACNC,WAAY,SAuCDC,EAnCA,WACb,IAAMC,EAAUnB,IADG,EAE6BP,IAAxCjC,EAFW,EAEXA,WAAYC,EAFD,EAECA,cAAeI,EAFhB,EAEgBA,SACnC,OACE,kBAACuD,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAWH,EAAQhB,MAC3C,kBAACoB,EAAA,EAAD,CAASD,UAAWH,EAAQP,SAC1B,kBAACY,EAAA,EAAD,CACEhB,MAAM,UACNiB,KAAK,wBACLH,UAAWH,EAAQT,MAEnB,yBACEgB,IAA8B,YAC9BC,IAAI,iBACJC,OAAO,QAGVpE,GACC,kBAACqE,EAAA,EAAD,CACErB,MAAM,UACNc,UAAWH,EAAQH,OACnBc,QAAS,WACPrE,GAAc,GACdI,EAAS,MACTxB,EAAU,QAAS,MAAO,MAN9B,aC5BK0F,EAdK,SAAC,GAAuC,IAA1BpC,EAAyB,EAApCC,UAAyBC,EAAW,6BACjDrC,EAAeiC,IAAfjC,WACR,OAGE,kBAAC,IAAD,iBACMqC,EADN,CAEEC,OAAQ,SAAA/B,GAAK,OACVP,EAAwC,kBAAC,IAAD,CAAUuC,GAAG,aAAxC,kBAACJ,EAAc5B,Q,kBCN/BiC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC8B,SAAU,CACRC,OAAQ/B,EAAM+B,OAAOC,OAAS,EAC9B1B,MAAO,YAiBI2B,EAbA,WACb,IAAMhB,EAAUnB,IACRrC,EAAc8B,IAAd9B,UACR,OAAIA,EAEA,kBAACyE,EAAA,EAAD,CAAUd,UAAWH,EAAQa,SAAUK,KAAM1E,GAC3C,kBAAC2E,EAAA,EAAD,CAAkB9B,MAAM,aAIvB,MCnBM+B,EAFD,kBAAM,qC,uFCcpB,SAASC,IACP,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQlC,MAAM,gBAAgBmC,MAAM,UACrD,aACD,kBAACnB,EAAA,EAAD,CAAMhB,MAAM,UAAUiB,KAAK,yBAA3B,kBAGC,yBAKP,IAAMzB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC0C,MAAO,CACLC,UAAW3C,EAAM4C,QAAQ,GACzBjC,QAAS,OACTkC,cAAe,SACfhC,WAAY,UAEdiC,OAAQ,CACNC,OAAQ/C,EAAM4C,QAAQ,GACtB1C,gBAAiBF,EAAMG,QAAQ6C,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPR,UAAW3C,EAAM4C,QAAQ,IAE3BQ,OAAQ,CACNL,OAAQ/C,EAAM4C,QAAQ,EAAG,EAAG,QA4HjBS,EAxHD,WAAO,IAAD,EACgBvF,mBAAS,CACzCe,UAAW,GACXE,SAAU,GACVuE,UAAU,IAJM,mBACX3E,EADW,KACA4E,EADA,OAadhE,IANF7B,EAPgB,EAOhBA,aACAN,EARgB,EAQhBA,WACAI,EATgB,EAShBA,YACAD,EAVgB,EAUhBA,cACAF,EAXgB,EAWhBA,cACAM,EAZgB,EAYhBA,SAGIsD,EAAUnB,IAEV0D,EAAY,uCAAG,WAAMC,GAAN,eAAApI,EAAA,6DACnBoI,EAAEC,iBACFhG,GAAa,GAFM,SAGIF,EAAYmB,GAHhB,QAGb1C,EAHa,QAIN0H,cACXtG,EAAc,CAAEuG,QAAS3H,EAAS0H,iBAElChG,EAAS1B,EAAST,OACdmD,EAAU2E,SACZnH,EAAU,QAASF,EAAST,MAAO,KAEnCW,EAAU,QAASF,EAAST,MAAO,GAErC+B,GAAc,IAEhBG,GAAa,GAfM,2CAAH,sDAkBlB,OACE,kBAACmG,EAAA,EAAD,CAAWnE,UAAU,OAAOoE,SAAS,MACnC,kBAACC,EAAA,EAAD,MACA,yBAAK3C,UAAWH,EAAQyB,OACtB,kBAACsB,EAAA,EAAD,CAAQ5C,UAAWH,EAAQ6B,QACzB,kBAAC,IAAD,OAEF,kBAACP,EAAA,EAAD,CAAY7C,UAAU,KAAK8C,QAAQ,MAAnC,WAGA,0BAAMpB,UAAWH,EAAQiC,KAAMe,YAAU,EAACC,SAAUV,GAClD,kBAACW,EAAA,EAAD,CACE3B,QAAQ,WACRO,OAAO,SACPqB,UAAQ,EACRC,WAAS,EACTC,GAAG,YACHC,MAAM,aACNvG,KAAK,QACLwG,KAAK,OACLC,WAAS,EACTtF,MAAOR,EAAUE,UACjB6F,SAAU,SAAAjB,GACRF,EAAa,eACR5E,EADO,CAEVE,UAAW4E,EAAEkB,OAAOxF,YAI1B,kBAACgF,EAAA,EAAD,CACE3B,QAAQ,WACRO,OAAO,SACPqB,UAAQ,EACRC,WAAS,EACTrG,KAAK,WACLuG,MAAM,WACNC,KAAK,WACLF,GAAG,WACHM,aAAa,mBACbzF,MAAOR,EAAUI,SACjB2F,SAAU,SAAAjB,GACRF,EAAa,eACR5E,EADO,CAEVI,SAAU0E,EAAEkB,OAAOxF,YAIzB,kBAAC0F,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACE5F,MAAM,WACNmB,MAAM,UACN0E,QAASrG,EAAU2E,SACnBoB,SAAU,SAAAjB,GACRF,EAAa,eACR5E,EADO,CAEV2E,UAAW3E,EAAU2E,eAK7BiB,MAAM,gBAER,kBAAC5C,EAAA,EAAD,CACE6C,KAAK,SACLH,WAAS,EACTY,KAAK,QACLzC,QAAQ,YACRlC,MAAM,UACNc,UAAWH,EAAQmC,QANrB,WAUA,kBAACb,EAAA,EAAD,CAAYC,QAAQ,UAAUlC,MAAM,SAApC,OACGlD,QADH,IACGA,OADH,EACGA,EAAYwG,WAInB,kBAACsB,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC7C,EAAD,SC9JO8C,EAFE,kBAAM,yCCsBRC,MAjBf,WACE,OACE,kBAAC,EAAD,KACE,kBAACtB,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAcrE,UAAW2C,EAAOiD,KAAK,WAAWC,OAAK,IACrD,kBAAC,EAAD,CAAa7F,UAAW2D,EAAOiC,KAAK,iBAAiBC,OAAK,IAC1D,kBAAC,IAAD,CAAO7F,UAAW0F,QCLtBI,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1B3H,QAAQ4H,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBrH,QAAQ4H,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAA9H,GACLD,QAAQC,MAAM,4CAA6CA,MC3FjE+H,IAASpH,OACP,kBAAC,IAAMqH,WAAP,KACE,kBAAC,EAAD,OAEFpK,SAASqK,eAAe,SDanB,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkB,IAAIvI,GAAwB8G,OAAOC,SAASpE,MACpD6F,SAAW1B,OAAOC,SAASyB,OAIvC,OAGF1B,OAAO2B,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMnH,GAAN,sBAEP4G,IAgEV,SAAiCO,EAAOC,GAEtCvK,MAAMsK,EAAO,CACXpK,QAAS,CAAE,iBAAkB,YAE5ByK,MAAK,SAAAnK,GAEJ,IAAMqL,EAAcrL,EAASN,QAAQ4L,IAAI,gBAEnB,MAApBtL,EAASuL,QACO,MAAfF,IAA8D,IAAvCA,EAAY7I,QAAQ,cAG5CwH,UAAUC,cAAcuB,MAAMrB,MAAK,SAAAC,GACjCA,EAAaqB,aAAatB,MAAK,WAC7BV,OAAOC,SAASgC,eAKpB7B,EAAgBC,EAAOC,MAG1Be,OAAM,WACL/H,QAAQ4H,IACN,oEAvFAgB,CAAwB7B,EAAOC,GAI/BC,UAAUC,cAAcuB,MAAMrB,MAAK,WACjCpH,QAAQ4H,IACN,iHAMJd,EAAgBC,EAAOC,OCnC/BE,K","file":"static/js/main.fa0cb5df.chunk.js","sourcesContent":["async function postData(url = \"\", data = {}, token = \"\") {\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(data)\n  });\n  return await response.json();\n}\n\nfunction readCookie(name) {\n  var nameEQ = name + \"=\";\n  var ca = document.cookie.split(\";\");\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1, c.length);\n    }\n    if (c.indexOf(nameEQ) === 0) {\n      return c.substring(nameEQ.length, c.length);\n    }\n  }\n  return null;\n}\n\nfunction setCookie(cname, cvalue, exdays) {\n  var d = new Date();\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  var expires = \"expires=\" + d.toUTCString();\n  document.cookie = cname + \"=\" + cvalue + \"; \" + expires;\n}\n\nexport { postData, readCookie, setCookie };\n","import React, { useEffect } from \"react\";\nimport { postData, readCookie } from \"../helpers/utils\";\n\nexport const AppContext = React.createContext({\n  users: [],\n  setUsers: null,\n  loginError: null,\n  setLoginError: null,\n  isLoggedIn: false,\n  setIsLoggegIn: null,\n  handleLogin: null,\n  isLoading: false,\n  setIsLoading: null,\n  token: null,\n  setToken: null\n});\n\nexport const AppProvider = props => {\n  const [isLoggedIn, setIsLoggegIn] = React.useState(false);\n  const [users, setUsers] = React.useState([]);\n  const [loginError, setLoginError] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [token, setToken] = React.useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const token = readCookie(\"token\");\n    if (token) {\n      setIsLoggegIn(true);\n      setToken(token);\n    }\n    setIsLoading(false);\n  }, []);\n\n  const handleLogin = async loginData => {\n    try {\n      const response = await postData(process.env.REACT_APP_LOGIN_URL, {\n        accountId: loginData.accountId,\n        pswd: loginData.password\n      });\n      return response;\n    } catch (error) {\n      console.error(error);\n      setLoginError(error);\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        isLoggedIn,\n        setIsLoggegIn,\n        users,\n        setUsers,\n        loginError,\n        setLoginError,\n        handleLogin,\n        isLoading,\n        setIsLoading,\n        token,\n        setToken\n      }}\n    >\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\nimport { AppContext } from \"../providers/AppProvider\";\n\nconst useAppContext = () => useContext(AppContext);\n\nexport const useApp = () => {\n  const isLoading = useAppContext().isLoading;\n  const setIsLoading = useAppContext().setIsLoading;\n  const isLoggedIn = useAppContext().isLoggedIn;\n  const setIsLoggegIn = useAppContext().setIsLoggegIn;\n  const users = useAppContext().users;\n  const setUsers = useAppContext().setUsers;\n  const loginError = useAppContext().loginError;\n  const setLoginError = useAppContext().setLoginError;\n  const handleLogin = useAppContext().handleLogin;\n  const token = useAppContext().token;\n  const setToken = useAppContext().setToken;\n\n  return {\n    isLoading,\n    setIsLoading,\n    isLoggedIn,\n    setIsLoggegIn,\n    users,\n    setUsers,\n    loginError,\n    setLoginError,\n    handleLogin,\n    token,\n    setToken\n  };\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useApp } from \"../hooks\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { isLoggedIn } = useApp();\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/apertum/login\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Link from \"@material-ui/core/Link\";\nimport Button from \"@material-ui/core/Button\";\nimport { useApp } from \"../hooks\";\nimport { setCookie } from \"../helpers/utils\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.common.white,\n    color: \"#04ba5f\",\n    padding: \"10px 0\"\n  },\n  link: {\n    fontSize: 0\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  button: {\n    fontWeight: 600\n  }\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  const { isLoggedIn, setIsLoggegIn, setToken } = useApp();\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar className={classes.toolbar}>\n        <Link\n          color=\"inherit\"\n          href=\"https://apertumo.com/\"\n          className={classes.link}\n        >\n          <img\n            src={process.env.PUBLIC_URL + \"/logo.png\"}\n            alt=\"Apertum Online\"\n            height=\"60\"\n          />\n        </Link>\n        {isLoggedIn && (\n          <Button\n            color=\"inherit\"\n            className={classes.button}\n            onClick={() => {\n              setIsLoggegIn(false);\n              setToken(null);\n              setCookie(\"token\", null, -10);\n            }}\n          >\n            Logout\n          </Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useApp } from \"../hooks\";\n\nconst PublicRoute = ({ component: Component, ...rest }) => {\n  const { isLoggedIn } = useApp();\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={props =>\n        !isLoggedIn ? <Component {...props} /> : <Redirect to=\"/apertum\" />\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React from \"react\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useApp } from \"../hooks\";\n\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\"\n  }\n}));\n\nconst Loader = () => {\n  const classes = useStyles();\n  const { isLoading } = useApp();\n  if (isLoading) {\n    return (\n      <Backdrop className={classes.backdrop} open={isLoading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    );\n  }\n  return null;\n};\n\nexport default Loader;\n","import React from \"react\";\n\nconst Users = () => <p>Users</p>;\n\nexport default Users;\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { useApp } from \"../hooks\";\nimport { setCookie } from \"../helpers/utils\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"© 2019 \"}\n      <Link color=\"inherit\" href=\"https://apertumo.com/\">\n        Apertum Online\n      </Link>\n      {\" All rights reserved.\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst Login = () => {\n  const [loginData, setLoginData] = useState({\n    accountId: \"\",\n    password: \"\",\n    remember: false\n  });\n  const {\n    setIsLoading,\n    loginError,\n    handleLogin,\n    setIsLoggegIn,\n    setLoginError,\n    setToken\n  } = useApp();\n\n  const classes = useStyles();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    const response = await handleLogin(loginData);\n    if (response.error_message)\n      setLoginError({ message: response.error_message });\n    else {\n      setToken(response.token);\n      if (loginData.remember) {\n        setCookie(\"token\", response.token, 365);\n      } else {\n        setCookie(\"token\", response.token, 1);\n      }\n      setIsLoggegIn(true);\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"accountId\"\n            label=\"Account Id\"\n            name=\"email\"\n            type=\"text\"\n            autoFocus\n            value={loginData.accountId}\n            onChange={e => {\n              setLoginData({\n                ...loginData,\n                accountId: e.target.value\n              });\n            }}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={loginData.password}\n            onChange={e => {\n              setLoginData({\n                ...loginData,\n                password: e.target.value\n              });\n            }}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                value=\"remember\"\n                color=\"primary\"\n                checked={loginData.remember}\n                onChange={e => {\n                  setLoginData({\n                    ...loginData,\n                    remember: !loginData.remember\n                  });\n                }}\n              />\n            }\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            size=\"large\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Typography variant=\"caption\" color=\"error\">\n            {loginError?.message}\n          </Typography>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\n\nconst NotFound = () => <p>Not Found</p>;\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { AppProvider } from \"./providers\";\nimport { PrivateRoute, Header, PublicRoute, Loader } from \"./components\";\nimport { Users, Login, NotFound } from \"./pages\";\n\nfunction App() {\n  return (\n    <AppProvider>\n      <CssBaseline />\n      <Header />\n      <Loader />\n      <BrowserRouter>\n        <Switch>\n          <PrivateRoute component={Users} path=\"/apertum\" exact />\n          <PublicRoute component={Login} path=\"/apertum/login\" exact />\n          <Route component={NotFound} />\n        </Switch>\n      </BrowserRouter>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}